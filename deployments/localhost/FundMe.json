{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe_NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x7f514148097a16f11ea681be893aa1765cc8e1e275a1c93aca6133d8252d5f67",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1058791",
        "logsBloom": "0x
        "blockHash": "0x128f46c478dc2fa3340dcb6d7bd4dd981c0f55cd6708c3b1d71187d717a94e0e",
        "transactionHash": "0x7f514148097a16f11ea681be893aa1765cc8e1e275a1c93aca6133d8252d5f67",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1058791",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "5d5416abcf537b18c931ff8882c77b7f",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jonas C\",\"details\":\"implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds contract\"}},\"notice\":\"demo sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.8;\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n//error codes \\nerror FundMe_NotOwner();\\n\\n//interfaces, libraries, contracts\\n\\n/// or \\n\\n/** @title A contract for crowd funding\\n    @author Jonas C\\n    @notice demo sample funding contract\\n    @dev implements price feeds as our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe_NotOwner();\\n    _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\n        \\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /** \\n    *@notice this function funds contract\\n    */\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex =0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, )  = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"keccak256\":\"0x2dd02ae7f2d22bc7b1b7c0840e8b6cb78d28f8aa3afbe034cf0a14380bb5d41f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x222f8b912c930f71a2d5b21cc91409442039a2fd5e7d3c53a901751ada1cd559\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b50604051620012ca380380620012ca83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61115e806200016c6000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a96565b6102eb565b6040516100cc9190610adc565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610575565b6040516101019190610adc565b60405180910390f35b34801561011657600080fd5b5061011f610582565b60405161012c9190610b06565b60405180910390f35b34801561014157600080fd5b5061014a6105ac565b6040516101579190610b80565b60405180910390f35b6101686101b1565b005b6101726105d6565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc7565b610868565b6040516101a89190610b06565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b090919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c51565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610ca0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610465576000600182815481106103e0576103df610cf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610d25565b9150506103bd565b50600067ffffffffffffffff81111561048157610480610d6e565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600190805190602001906104c592919061098c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ec90610dce565b60006040518083038185875af1925050503d8060008114610529576040519150601f19603f3d011682016040523d82523d6000602084013e61052e565b606091505b5050905080610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990610e2f565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610697575b5050505050905060005b815181101561076b57600082828151811061070957610708610cf6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d25565b9150506106eb565b50600067ffffffffffffffff81111561078757610786610d6e565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600190805190602001906107cb92919061098c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081490610dce565b60006040518083038185875af1925050503d8060008114610851576040519150601f19603f3d011682016040523d82523d6000602084013e610856565b606091505b505090508061086457600080fd5b5050565b60006001828154811061087e5761087d610cf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108bc836108ec565b90506000670de0b6b3a764000085836108d59190610e4f565b6108df9190610ed8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093557600080fd5b505afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190610f96565b5050509150506402540be400816109849190611011565b915050919050565b828054828255906000526020600020908101928215610a05579160200282015b82811115610a045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ac565b5b509050610a129190610a16565b5090565b5b80821115610a2f576000816000905550600101610a17565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6382610a38565b9050919050565b610a7381610a58565b8114610a7e57600080fd5b50565b600081359050610a9081610a6a565b92915050565b600060208284031215610aac57610aab610a33565b5b6000610aba84828501610a81565b91505092915050565b6000819050919050565b610ad681610ac3565b82525050565b6000602082019050610af16000830184610acd565b92915050565b610b0081610a58565b82525050565b6000602082019050610b1b6000830184610af7565b92915050565b6000819050919050565b6000610b46610b41610b3c84610a38565b610b21565b610a38565b9050919050565b6000610b5882610b2b565b9050919050565b6000610b6a82610b4d565b9050919050565b610b7a81610b5f565b82525050565b6000602082019050610b956000830184610b71565b92915050565b610ba481610ac3565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b600060208284031215610bdd57610bdc610a33565b5b6000610beb84828501610bb2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c3b601b83610bf4565b9150610c4682610c05565b602082019050919050565b60006020820190508181036000830152610c6a81610c2e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cab82610ac3565b9150610cb683610ac3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ceb57610cea610c71565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3082610ac3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6357610d62610c71565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db8600083610d9d565b9150610dc382610da8565b600082019050919050565b6000610dd982610dab565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e19600b83610bf4565b9150610e2482610de3565b602082019050919050565b60006020820190508181036000830152610e4881610e0c565b9050919050565b6000610e5a82610ac3565b9150610e6583610ac3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9e57610e9d610c71565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee382610ac3565b9150610eee83610ac3565b925082610efe57610efd610ea9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2881610f09565b8114610f3357600080fd5b50565b600081519050610f4581610f1f565b92915050565b6000819050919050565b610f5e81610f4b565b8114610f6957600080fd5b50565b600081519050610f7b81610f55565b92915050565b600081519050610f9081610b9b565b92915050565b600080600080600060a08688031215610fb257610fb1610a33565b5b6000610fc088828901610f36565b9550506020610fd188828901610f6c565b9450506040610fe288828901610f81565b9350506060610ff388828901610f81565b925050608061100488828901610f36565b9150509295509295909350565b600061101c82610f4b565b915061102783610f4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106657611065610c71565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a3576110a2610c71565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110e0576110df610c71565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111d5761111c610c71565b5b82820290509291505056fea2646970667358221220627249962ab56f5777fe17cc70c9d8aa54e77bdedc26601a231378bd9c48fdca64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a96565b6102eb565b6040516100cc9190610adc565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610575565b6040516101019190610adc565b60405180910390f35b34801561011657600080fd5b5061011f610582565b60405161012c9190610b06565b60405180910390f35b34801561014157600080fd5b5061014a6105ac565b6040516101579190610b80565b60405180910390f35b6101686101b1565b005b6101726105d6565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc7565b610868565b6040516101a89190610b06565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b090919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c51565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610ca0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610465576000600182815481106103e0576103df610cf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610d25565b9150506103bd565b50600067ffffffffffffffff81111561048157610480610d6e565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600190805190602001906104c592919061098c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ec90610dce565b60006040518083038185875af1925050503d8060008114610529576040519150601f19603f3d011682016040523d82523d6000602084013e61052e565b606091505b5050905080610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990610e2f565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610697575b5050505050905060005b815181101561076b57600082828151811061070957610708610cf6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d25565b9150506106eb565b50600067ffffffffffffffff81111561078757610786610d6e565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600190805190602001906107cb92919061098c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081490610dce565b60006040518083038185875af1925050503d8060008114610851576040519150601f19603f3d011682016040523d82523d6000602084013e610856565b606091505b505090508061086457600080fd5b5050565b60006001828154811061087e5761087d610cf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108bc836108ec565b90506000670de0b6b3a764000085836108d59190610e4f565b6108df9190610ed8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093557600080fd5b505afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190610f96565b5050509150506402540be400816109849190611011565b915050919050565b828054828255906000526020600020908101928215610a05579160200282015b82811115610a045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ac565b5b509050610a129190610a16565b5090565b5b80821115610a2f576000816000905550600101610a17565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6382610a38565b9050919050565b610a7381610a58565b8114610a7e57600080fd5b50565b600081359050610a9081610a6a565b92915050565b600060208284031215610aac57610aab610a33565b5b6000610aba84828501610a81565b91505092915050565b6000819050919050565b610ad681610ac3565b82525050565b6000602082019050610af16000830184610acd565b92915050565b610b0081610a58565b82525050565b6000602082019050610b1b6000830184610af7565b92915050565b6000819050919050565b6000610b46610b41610b3c84610a38565b610b21565b610a38565b9050919050565b6000610b5882610b2b565b9050919050565b6000610b6a82610b4d565b9050919050565b610b7a81610b5f565b82525050565b6000602082019050610b956000830184610b71565b92915050565b610ba481610ac3565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b600060208284031215610bdd57610bdc610a33565b5b6000610beb84828501610bb2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c3b601b83610bf4565b9150610c4682610c05565b602082019050919050565b60006020820190508181036000830152610c6a81610c2e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cab82610ac3565b9150610cb683610ac3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ceb57610cea610c71565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3082610ac3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6357610d62610c71565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db8600083610d9d565b9150610dc382610da8565b600082019050919050565b6000610dd982610dab565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e19600b83610bf4565b9150610e2482610de3565b602082019050919050565b60006020820190508181036000830152610e4881610e0c565b9050919050565b6000610e5a82610ac3565b9150610e6583610ac3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9e57610e9d610c71565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee382610ac3565b9150610eee83610ac3565b925082610efe57610efd610ea9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2881610f09565b8114610f3357600080fd5b50565b600081519050610f4581610f1f565b92915050565b6000819050919050565b610f5e81610f4b565b8114610f6957600080fd5b50565b600081519050610f7b81610f55565b92915050565b600081519050610f9081610b9b565b92915050565b600080600080600060a08688031215610fb257610fb1610a33565b5b6000610fc088828901610f36565b9550506020610fd188828901610f6c565b9450506040610fe288828901610f81565b9350506060610ff388828901610f81565b925050608061100488828901610f36565b9150509295509295909350565b600061101c82610f4b565b915061102783610f4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106657611065610c71565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a3576110a2610c71565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110e0576110df610c71565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111d5761111c610c71565b5b82820290509291505056fea2646970667358221220627249962ab56f5777fe17cc70c9d8aa54e77bdedc26601a231378bd9c48fdca64736f6c63430008080033",
    "devdoc": {
        "author": "Jonas C",
        "details": "implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "this function funds contract"
            }
        },
        "notice": "demo sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "i_owner",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
